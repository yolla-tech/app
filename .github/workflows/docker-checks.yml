name: Docker Build and Test

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  dockerfile-validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate ${{ matrix.service }} Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          check: true
          build-args: |
            BUILDKIT_DOCKERFILE_CHECK=error=true

  build-and-test:
    needs: dockerfile-validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build ${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          tags: ${{ matrix.service }}:ci
          target: tester
          load: true

      - name: Run ${{ matrix.service }} tests
        run: |
          if [ "${{ matrix.service }}" = "frontend" ]; then
            docker run --rm frontend:ci npm test
          else
            docker run --rm backend:ci pytest tests/ -v
          fi

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Push Production Images
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          tags: |
            your-registry/frontend:latest
            your-registry/frontend:${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: Build and Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          tags: |
            your-registry/backend:latest
            your-registry/backend:${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}